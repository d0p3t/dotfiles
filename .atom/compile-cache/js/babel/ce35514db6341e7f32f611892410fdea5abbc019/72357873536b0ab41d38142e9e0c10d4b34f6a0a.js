Object.defineProperty(exports, '__esModule', {
  value: true
});

var _atomTernjsHelper = require('../atom-ternjs-helper');

'use babel';

var index = 0;
var checkpoints = [];

function set(data) {

  checkpoints.length = 0;

  var editor = atom.workspace.getActiveTextEditor();
  var buffer = editor.getBuffer();
  var cursor = editor.getLastCursor();

  if (!cursor) {

    return false;
  }

  var marker = buffer.markPosition(cursor.getBufferPosition(), {});

  add(editor, marker);

  return true;
}

function append(editor, buffer, position) {

  var marker = buffer.markPosition(position, {});

  add(editor, marker);
}

function add(editor, marker) {

  index = checkpoints.push({

    marker: marker,
    editor: editor

  }) - 1;
}

function goTo(value) {

  var checkpoint = checkpoints[index + value];

  if (!checkpoint) {

    return;
  }

  index += value;

  (0, _atomTernjsHelper.openFileAndGoToPosition)(checkpoint.marker.getRange().start, checkpoint.editor.getURI());
}

function reset() {

  index = 0;
  checkpoints = [];
}

exports['default'] = {

  set: set,
  append: append,
  goTo: goTo,
  reset: reset
};
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JlbWNvLy5hdG9tL3BhY2thZ2VzL2F0b20tdGVybmpzL2xpYi9zZXJ2aWNlcy9uYXZpZ2F0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Z0NBSU8sdUJBQXVCOztBQUo5QixXQUFXLENBQUM7O0FBTVosSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0FBQ2QsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDOztBQUVyQixTQUFTLEdBQUcsQ0FBQyxJQUFJLEVBQUU7O0FBRWpCLGFBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDOztBQUV2QixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixFQUFFLENBQUM7QUFDcEQsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBQ2xDLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxhQUFhLEVBQUUsQ0FBQzs7QUFFdEMsTUFBSSxDQUFDLE1BQU0sRUFBRTs7QUFFWCxXQUFPLEtBQUssQ0FBQztHQUNkOztBQUVELE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7O0FBRW5FLEtBQUcsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7O0FBRXBCLFNBQU8sSUFBSSxDQUFDO0NBQ2I7O0FBRUQsU0FBUyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUU7O0FBRXhDLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDOztBQUVqRCxLQUFHLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0NBQ3JCOztBQUVELFNBQVMsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUU7O0FBRTNCLE9BQUssR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDOztBQUV2QixVQUFNLEVBQUUsTUFBTTtBQUNkLFVBQU0sRUFBRSxNQUFNOztHQUVmLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDUjs7QUFFRCxTQUFTLElBQUksQ0FBQyxLQUFLLEVBQUU7O0FBRW5CLE1BQU0sVUFBVSxHQUFHLFdBQVcsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUM7O0FBRTlDLE1BQUksQ0FBQyxVQUFVLEVBQUU7O0FBRWYsV0FBTztHQUNSOztBQUVELE9BQUssSUFBSSxLQUFLLENBQUM7O0FBRWYsaURBQXdCLFVBQVUsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztDQUN6Rjs7QUFFRCxTQUFTLEtBQUssR0FBRzs7QUFFZixPQUFLLEdBQUcsQ0FBQyxDQUFDO0FBQ1YsYUFBVyxHQUFHLEVBQUUsQ0FBQztDQUNsQjs7cUJBRWM7O0FBRWIsS0FBRyxFQUFILEdBQUc7QUFDSCxRQUFNLEVBQU4sTUFBTTtBQUNOLE1BQUksRUFBSixJQUFJO0FBQ0osT0FBSyxFQUFMLEtBQUs7Q0FDTiIsImZpbGUiOiIvaG9tZS9yZW1jby8uYXRvbS9wYWNrYWdlcy9hdG9tLXRlcm5qcy9saWIvc2VydmljZXMvbmF2aWdhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnO1xuXG5pbXBvcnQge1xuICBvcGVuRmlsZUFuZEdvVG9Qb3NpdGlvblxufSBmcm9tICcuLi9hdG9tLXRlcm5qcy1oZWxwZXInO1xuXG5sZXQgaW5kZXggPSAwO1xubGV0IGNoZWNrcG9pbnRzID0gW107XG5cbmZ1bmN0aW9uIHNldChkYXRhKSB7XG5cbiAgY2hlY2twb2ludHMubGVuZ3RoID0gMDtcblxuICBjb25zdCBlZGl0b3IgPSBhdG9tLndvcmtzcGFjZS5nZXRBY3RpdmVUZXh0RWRpdG9yKCk7XG4gIGNvbnN0IGJ1ZmZlciA9IGVkaXRvci5nZXRCdWZmZXIoKTtcbiAgY29uc3QgY3Vyc29yID0gZWRpdG9yLmdldExhc3RDdXJzb3IoKTtcblxuICBpZiAoIWN1cnNvcikge1xuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3QgbWFya2VyID0gYnVmZmVyLm1hcmtQb3NpdGlvbihjdXJzb3IuZ2V0QnVmZmVyUG9zaXRpb24oKSwge30pO1xuXG4gIGFkZChlZGl0b3IsIG1hcmtlcik7XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIGFwcGVuZChlZGl0b3IsIGJ1ZmZlciwgcG9zaXRpb24pIHtcblxuICBjb25zdCBtYXJrZXIgPSBidWZmZXIubWFya1Bvc2l0aW9uKHBvc2l0aW9uLCB7fSk7XG5cbiAgYWRkKGVkaXRvciwgbWFya2VyKTtcbn1cblxuZnVuY3Rpb24gYWRkKGVkaXRvciwgbWFya2VyKSB7XG5cbiAgaW5kZXggPSBjaGVja3BvaW50cy5wdXNoKHtcblxuICAgIG1hcmtlcjogbWFya2VyLFxuICAgIGVkaXRvcjogZWRpdG9yXG5cbiAgfSkgLSAxO1xufVxuXG5mdW5jdGlvbiBnb1RvKHZhbHVlKSB7XG5cbiAgY29uc3QgY2hlY2twb2ludCA9IGNoZWNrcG9pbnRzW2luZGV4ICsgdmFsdWVdO1xuXG4gIGlmICghY2hlY2twb2ludCkge1xuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaW5kZXggKz0gdmFsdWU7XG5cbiAgb3BlbkZpbGVBbmRHb1RvUG9zaXRpb24oY2hlY2twb2ludC5tYXJrZXIuZ2V0UmFuZ2UoKS5zdGFydCwgY2hlY2twb2ludC5lZGl0b3IuZ2V0VVJJKCkpO1xufVxuXG5mdW5jdGlvbiByZXNldCgpIHtcblxuICBpbmRleCA9IDA7XG4gIGNoZWNrcG9pbnRzID0gW107XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcblxuICBzZXQsXG4gIGFwcGVuZCxcbiAgZ29UbyxcbiAgcmVzZXRcbn07XG4iXX0=